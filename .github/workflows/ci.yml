on: push
name: CI

jobs:
  build:
    name: Build
    strategy:
      fail-fast: false
      matrix:
        node-version: [ 12.x ]
        os: [ ubuntu-latest, macos-latest, windows-latest ]

    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout the repo
        uses: actions/checkout@v2
      - name: Set up Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}
      - name: yarn install
        run: yarn install
      - name: Package release archive
        run: yarn run package
      - name: Save release archive
        uses: actions/upload-artifact@v2
        with:
          name: release-archive-${{ matrix.os }}
          path: build/*.zip

  publish-release:
    name: Publish release
    needs: build
    if: startsWith(github.ref, 'refs/tags/')
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the repo
        uses: actions/checkout@v2
      - name: Set up Node.js 12.x
        uses: actions/setup-node@v2
        with:
          node-version: 12.x
          registry-url: 'https://registry.npmjs.org'
      - name: Publish to npm
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_AUTH_TOKEN }}
        run: npm publish --access public
      - name: Fetch release archives
        uses: actions/download-artifact@v2
      - name: Get the tag name
        id: tag
        run: echo ::set-output name=TAG::${GITHUB_REF/refs\/tags\//}
      - name: Create github release
        uses: felixbrucker/github-actions/publish-release@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          args: --name flax-Dashboard-Satellite
      - uses: AButler/upload-release-assets@v2.0
        with:
          files: 'release-archive-*/*.zip'
          repo-token: ${{ secrets.GITHUB_TOKEN }}
          release-tag: ${{ steps.tag.outputs.TAG }}
